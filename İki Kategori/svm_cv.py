# -*- coding: utf-8 -*-
"""SVM CV.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oEUSXoTTzLocs7f8XX2vi-SRYgFmzQrH
"""

import pandas as pd
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.svm import SVC

data = pd.read_csv('data/processed_2.csv')
data['Tweets'].fillna('', inplace=True)

X = data['Tweets']
y = data['Tag']

count_vectorizer = CountVectorizer()
X_counts = count_vectorizer.fit_transform(X)

X_train, X_test, y_train, y_test = train_test_split(X_counts, y, test_size=0.2, random_state=42)

param_grid = {
    'C': [0.01, 0.1, 1, 10, 100],
    'kernel': ['linear', 'rbf']
}

svm_model_1 = SVC()

grid_search = GridSearchCV(svm_model_1, param_grid, cv=5)

grid_search.fit(X_train, y_train)

best_svm_model = grid_search.best_estimator_

test_score = best_svm_model.score(X_test, y_test)

print(f"Best parameters: {grid_search.best_params_}")
print(f"Test set score with best parameters: {test_score}")

cv_results = grid_search.cv_results_
print("Cross-Validation Scores:", cv_results['mean_test_score'])
print("Average Cross-Validation Score:", cv_results['mean_test_score'].mean())

from sklearn.metrics import classification_report

best_svm_model.fit(X_train, y_train)

y_predict = best_svm_model.predict(X_test)

category_mapping = {
    0: 'not_cyberbullying',
    1: 'cyberbullying'
}

print(classification_report(y_test.map(category_mapping), [category_mapping[label] for label in y_predict]))

import matplotlib.pyplot as plt
from sklearn.metrics import ConfusionMatrixDisplay
from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test, y_predict)
disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=['not cyberbullying', 'cyberbullying'])
disp.plot(cmap=plt.cm.Blues)
plt.title('SVM CV Confusion Matrix')
plt.show()