# -*- coding: utf-8 -*-
"""KNN tf-idf.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WFFftuVRAiZqC2GwuMFkM5VjeHcxzpMh
"""

import pandas as pd
df = pd.read_csv("data/processed_2.csv",encoding="utf-8")
unnamed_columns = [col for col in df.columns if 'Unnamed' in col]
df.drop(columns=unnamed_columns, inplace=True)
df['Tweets'] = df['Tweets'].astype(str)
df['Tweets'].dtype

df.head()

from sklearn.feature_extraction.text import TfidfVectorizer
c_vect = TfidfVectorizer()
x = c_vect.fit_transform(df['Tweets'])
y = df['Tag']

from sklearn.model_selection import train_test_split

x_train, x_test ,y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=101, stratify=y,shuffle = True)

x_train.shape, y_train.shape, x_test.shape, y_test.shape

import pandas as pd
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import GridSearchCV, train_test_split

param_grid = {
    'n_neighbors': [5, 10, 15, 20, 25, 30]
}

knn = KNeighborsClassifier()

grid_search = GridSearchCV(knn, param_grid, cv=5)

grid_search.fit(x_train, y_train)

best_knn = grid_search.best_estimator_

test_score = best_knn.score(x_test, y_test)

print(f"Best parameters: {grid_search.best_params_}")
print(f"Test set score with best parameters: {test_score}")

from sklearn.model_selection import cross_val_score
knn_cv = cross_val_score(best_knn, x, y, cv=5)
knn_cv.mean()
knn_cv

from sklearn.metrics import classification_report, confusion_matrix

y_predict = best_knn.predict(x_test)
print(type(y_predict))
y_predict

print(classification_report(y_test, y_predict))

import matplotlib.pyplot as plt
from sklearn.metrics import ConfusionMatrixDisplay, confusion_matrix

y_predict = best_knn.predict(x_test)

cm = confusion_matrix(y_test, y_predict)

disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=['not cyberbullying', 'cyberbullying'])

disp.plot(cmap=plt.cm.Blues)
plt.title('KNN tf-idf Confusion Matrix')
plt.show()